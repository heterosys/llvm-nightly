name: Nightly Snapshot

on:
  schedule:
    - cron:  '00 9 * * *'

jobs:
  package-deb:
    if: github.repository == 'heterosys/llvm-nightly'
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout myself
        uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y%m%d')"
      - name: Install build dependencies
        run: |
          ./.github/scripts/install-build-deps.sh
      - name: Configure myself
        run: |
          cmake -S llvm -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_PROJECTS="clang;lld;mlir" \
            -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
            -DLLVM_BUILD_UTILS=On \
            -DLLVM_INSTALL_UTILS=On \
            -DPACKAGE_VERSION="15.${{ steps.date.outputs.date }}" \
            -DCPACK_GENERATOR=DEB \
            -DCPACK_DEBIAN_PACKAGE_MAINTAINER="Jason Lau" \
            -DCPACK_DEBIAN_PACKAGE_ARCHITECTURE="amd64" \
            -DCPACK_DEBIAN_PACKAGE_DEPENDS="zlib1g-dev,libncurses5-dev" \
            -DCPACK_PACKAGE_NAME="llvm-clang-mlir-dev" \
            -DCMAKE_MAKE_PROGRAM=ninja \
            -G Ninja
      - name: Package myself
        run: cmake --build build --target package
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-deb
          path: build/llvm-clang-mlir-dev-15.${{ steps.date.outputs.date }}-Linux.deb

  release:
    needs: package-deb
    if: github.repository == 'heterosys/llvm-nightly'
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y%m%d')"
      - name: Release snapshot
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: snapshot-${{ steps.date.outputs.date }}
          release_name: Snapshot ${{ steps.date.outputs.date }}
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  upload-release:
    needs: release
    if: github.repository == 'heterosys/llvm-nightly'
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Load release URL file from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y%m%d')"
      - name: Get release upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Load release DEB file from package job
        uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.os }}-deb
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ matrix.os }}-deb/llvm-clang-mlir-dev-15.${{ steps.date.outputs.date }}-Linux.deb
          asset_name: llvm-clang-mlir-dev-15.${{ matrix.os }}.deb
          asset_content_type: application/vnd.debian.binary-package
