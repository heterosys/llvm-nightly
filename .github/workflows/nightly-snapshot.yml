name: Nightly Snapshot

on:
  schedule:
  - cron: "59 2 * * *"

jobs:
  package-deb:
    if: github.repository == 'heterosys/llvm-nightly'

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    steps:
      - name: Checkout myself
        uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Install build dependencies
        run: |
          ./.github/scripts/install-build-deps.sh
      - name: Cache build
        uses: actions/cache@v1
        with:
          path: build
          key: ${{ matrix.os }}-llvm-202112
      - name: Configure myself
        run: |
          cmake -S llvm -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_PROJECTS="clang;mlir" \
            -DLLVM_TARGETS_TO_BUILD=X86 \
            -DLLVM_INSTALL_UTILS=On \
            -DPACKAGE_VERSION=${{ steps.date.outputs.date }} \
            -DCPACK_GENERATOR=DEB \
            -DCPACK_DEBIAN_PACKAGE_MAINTAINER="Jason Lau" \
            -DCPACK_DEBIAN_PACKAGE_ARCHITECTURE="amd64" \
            -DCPACK_PACKAGE_NAME="llvm-clang-mlir-dev" \
            -DCMAKE_MAKE_PROGRAM=ninja \
            -G Ninja
      - name: Package myself
        run: cmake --build build --target package
      - name: Release snapshot
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: snapshot-${{ steps.date.outputs.date }}
          release_name: snapshot-${{ steps.date.outputs.date }}
          prerelease: true
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/llvm-clang-mlir-dev-${{ steps.date.outputs.date }}-Linux.deb
          asset_name: llvm-clang-mlir-dev-${{ steps.date.outputs.date }}-${{ matrix.os }}
          asset_content_type: application/vnd.debian.binary-package
